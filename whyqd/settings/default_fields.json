{
	"common": {
		"name": "field_name",
		"title": "A human-readable version of the field name",
		"description": "A description for the field",
		"foreignKey": {
			"type": "boolean",
			"description": "Set `foreignKey` `true` if the field is to be treated as an immutable value."
		}
	},
	"fields": [
		{
			"type": "string",
			"description": "Any text-based string.",
			"required": [
				"name", "type"
			],
			"format": {
				"description": "The format keyword options for `string` are `default`, `email`, `uri`, `binary`, and `uuid`.",
                "category": [
                  "default",
                  "email",
                  "uri",
                  "binary",
                  "uuid"
                ],
                "default": "default"
			},
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"unique": {
						"type": "boolean",
						"description": "When `true`, each value for the property `MUST` be unique."
					},
					"category": {
						"minItems": 1,
						"description": "A list of dictionary terms with `name` & (optional) `description`, and with minimum length `minItems`."
					},
					"minimum": {
						"type": "integer",
						"description": "An integer that specifies the minimum length of a value."
					},
					"maximum": {
						"type": "integer",
						"description": "An integer that specifies the maximum length of a value."
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": ""
			}
		},
		{
			"type": "number",
			"description": "Any number-based value, including integers and floats.",
			"required": [
				"name", "type"
			],
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"unique": {
						"type": "boolean",
						"description": "When `true`, each value for the property `MUST` be unique."
					},
					"category": {
						"minItems": 1,
						"description": "A list of dictionary terms with `name` & (optional) `description`, and with minimum length `minItems`."
					},
					"minimum": {
						"type": "number",
						"description": "A number that specifies the minimum of a value."
					},
					"maximum": {
						"type": "number",
						"description": "A number that specifies the maximum of a value."
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": "nan"
			}
		},
		{
			"type": "integer",
			"description": "Any integer-based value.",
			"required": [
				"name", "type"
			],
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"unique": {
						"type": "boolean",
						"description": "When `true`, each value for the property `MUST` be unique."
					},
					"category": {
						"minItems": 1,
						"description": "A list of dictionary terms with `name` & (optional) `description`, and with minimum length `minItems`."
					},
					"minimum": {
						"type": "integer",
						"description": "An integer that specifies the minimum of a value."
					},
					"maximum": {
						"type": "integer",
						"description": "An integer that specifies the maximum of a value."
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": "nan"
			}
		},
		{
			"type": "boolean",
			"description": "A boolean [`true`, `false`] value. Can set category constraints to fix term used.",
			"required": [
				"name", "type"
			],
			"category": [
				"true", "True", "TRUE", "1", "false", "False", "FALSE", "0"
			],
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"category": {
						"minItems": 2,
						"description": "A list of dictionary terms with `name` & (optional) `description`, and with minimum length `minItems`."
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": "false"
			}
		},
		{
			"type": "object",
			"description": "Any valid JSON data.",
			"required": [
				"name", "type"
			],
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"unique": {
						"type": "boolean",
						"description": "When `true`, each value for the property `MUST` be unique."
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": {}
			}
		},
		{
			"type": "array",
			"description": "Any valid array-based data.",
			"required": [
				"name", "type"
			],
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"unique": {
						"type": "boolean",
						"description": "When `true`, each value for the property `MUST` be unique."
					},
					"category": {
						"minItems": 1,
						"description": "A list of dictionary terms with `name` & (optional) `description`, and with minimum length `minItems`."
					},
					"valueType": {
						"type": ["string", "number", "integer", "boolean", "date", "datetime", "year"],
						"description": "Defines the `type` for contents of the array.",
						"default": "string"
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": []
			}
		},
		{
			"type": "date",
			"description": "Any date without a time. Must be in ISO8601 format, `YYYY-MM-DD` with UTC time specified (optionally) as `YYYY-MM-DDThh:mm:ssZ`.",
			"required": [
				"name", "type"
			],
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"unique": {
						"type": "boolean",
						"description": "When `true`, each value for the property `MUST` be unique."
					},
					"filter": {
						"field": "foreignKey",
						"description": "A set of user-defined filters for filtering a named field, or the `foreignKey`, by date-limited data"
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": ""
			}
		},
		{
			"type": "datetime",
			"description": "Any date with a time. Must be in ISO8601 format, with UTC time specified (optionally) as `YYYY-MM-DDThh:mm:ssZ`.",
			"required": [
				"name", "type"
			],
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"unique": {
						"type": "boolean",
						"description": "When `true`, each value for the property `MUST` be unique."
					},
					"filter": {
						"field": "foreignKey",
						"description": "A set of user-defined filters for filtering a named field, or the `foreignKey`, by date-limited data"
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": ""
			}
		},
		{
			"type": "year",
			"description": "Any year, formatted as `YYYY`.",
			"required": [
				"name", "type"
			],
			"constraints": {
				"description": "The following constraints are supported.",
				"properties": {
					"required": {
						"type": "boolean",
						"description": "Indicates whether a property must have a value for each instance."
					},
					"unique": {
						"type": "boolean",
						"description": "When `true`, each value for the property `MUST` be unique."
					},
					"filter": {
						"field": "foreignKey",
						"description": "A set of user-defined filters for filtering a named field, or the `foreignKey`, by date-limited data"
					}
				}
			},
			"missing": {
				"description": "Default to be used for missing values.",
				"default": ""
			}
		}
	]
}